cmake_minimum_required(VERSION 3.16)
project(tensorflow-lite C CXX)

set(tensorflow-lite_VERSION "2.7.0")

set(INSTALL_LIB_DIR ${CMAKE_INSTALL_PREFIX}/lib/
    CACHE PATH "Installation directory for libraries")
set(INSTALL_INCLUDE_DIR ${CMAKE_INSTALL_PREFIX}/include/
    CACHE PATH "Installation directory for headers")
set(INSTALL_CMAKE_DIR ${INSTALL_LIB_DIR}/cmake/tensorflow-lite
    CACHE PATH "Installation directory for headers")

set(TENSORFLOW_SOURCE_DIR "" CACHE PATH
  "Directory that contains the TensorFlow project"
)
if(NOT TENSORFLOW_SOURCE_DIR)
  get_filename_component(TENSORFLOW_SOURCE_DIR
    "${CMAKE_CURRENT_LIST_DIR}/../../../../"
    ABSOLUTE
  )
endif()

set(BUILD_SHARED_LIBS OFF CACHE BOOL "Enable share libs")

add_subdirectory(
  "${TENSORFLOW_SOURCE_DIR}/tensorflow/lite"
  "${CMAKE_CURRENT_BINARY_DIR}/tensorflow-lite"
  EXCLUDE_FROM_ALL
)

set(TF_ALL_TARGETS tensorflow-lite
                   ruy
                   flatbuffers
                   farmhash
                   pthreadpool
                   cpuinfo
                   clog
                   XNNPACK
                   fft2d_fftsg
                   fft2d_fftsg2d)

install(TARGETS ${TF_ALL_TARGETS}
        LIBRARY DESTINATION ${INSTALL_LIB_DIR}
                COMPONENT runtime
        ARCHIVE DESTINATION ${INSTALL_LIB_DIR}
                COMPONENT runtime
        PUBLIC_HEADER OPTIONAL
                      DESTINATION "${INSTALL_INCLUDE_DIR}"
                      COMPONENT development)

install(DIRECTORY "${TENSORFLOW_SOURCE_DIR}/tensorflow/core/public"
        DESTINATION "${INSTALL_INCLUDE_DIR}/tensorflow/core"
        COMPONENT development
        FILES_MATCHING PATTERN "*.h")

install(DIRECTORY "${TENSORFLOW_SOURCE_DIR}/tensorflow/lite" 
        DESTINATION "${INSTALL_INCLUDE_DIR}/tensorflow"
        COMPONENT development
        FILES_MATCHING PATTERN "*.h"
                       PATTERN "delegates" EXCLUDE
                       PATTERN "examples" EXCLUDE
                       PATTERN "java" EXCLUDE
                       PATTERN "nnapi" EXCLUDE
                       PATTERN "objc" EXCLUDE
                       PATTERN "python" EXCLUDE
                       PATTERN "swift" EXCLUDE
                       PATTERN "testing" EXCLUDE
                       PATTERN "toco" EXCLUDE
                       PATTERN "tools" EXCLUDE)

install(DIRECTORY "${PROJECT_BINARY_DIR}/flatbuffers/include/flatbuffers"
        DESTINATION "${INSTALL_INCLUDE_DIR}"
        COMPONENT development
        FILES_MATCHING PATTERN "*.h")

set(CONF_INCLUDE_DIRS "${INSTALL_INCLUDE_DIR}")
configure_file(tensorflow-liteConfig.cmake.in
              "${PROJECT_BINARY_DIR}/tensorflow-liteConfig.cmake" @ONLY)
configure_file(tensorflow-liteConfigVersion.cmake.in
              "${PROJECT_BINARY_DIR}/tensorflow-liteConfigVersion.cmake" @ONLY)

install(FILES "${PROJECT_BINARY_DIR}/tensorflow-liteConfig.cmake"
              "${PROJECT_BINARY_DIR}/tensorflow-liteConfigVersion.cmake"
        DESTINATION "${INSTALL_CMAKE_DIR}" COMPONENT development)


#
# Reference for cmake:
# https://gitlab.kitware.com/cmake/community/-/wikis/doc/tutorials/How-to-create-a-ProjectConfig.cmake-file
#



